services:
  mysql:
    image: mysql:9
    container_name: gas_mysql
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    ports:
      - "${MYSQL_LOCAL_PORT}:${MYSQL_DOCKER_PORT}"
    volumes:
      - ./db:/var/lib/mysql
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: gas_backend
    restart: unless-stopped
    env_file: .env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "3001:3001"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./backend/src/uploads:/app/uploads

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: gas_frontend
    restart: unless-stopped
    env_file: .env
    ports:
      - "3000:3000"
    depends_on:
      - mysql
    #volumes:
    # - '.:/frontendapp'
    command: npm start

volumes:
  db:
